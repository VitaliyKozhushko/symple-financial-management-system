services:
  db:
    image: postgis/postgis:14-3.2-alpine
    container_name: postgres
    ports:
      - "${PORT_DB}:5432"
    environment:
      - ENVIRONMENT=docker
      - POSTGRES_DB=${NAME_DB}
      - POSTGRES_USER=${USER_DB}
      - POSTGRES_PASSWORD=${PASSWD_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    env_file:
      - .env.docker
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${USER_DB} -d ${NAME_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    expose:
      - 6379
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - app-network

  celery:
    build: .
    container_name: celery
    command: celery -A fms worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    env_file:
      - .env.docker
    networks:
      - app-network
    restart: always

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A fms beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    env_file:
      - .env.docker
    networks:
      - app-network

  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django
    command: sh -c "python manage.py collectstatic --no-input &&
                    python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py shell < create_superuser.py &&
                    gunicorn --bind 0.0.0.0:8000 fms.wsgi:application"
    ports:
      - "8000:8000"
    volumes:
      - .:/project
      - static_data:/project/static
    environment:
      - ENVIRONMENT=docker
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

volumes:
  pgdata:
  static_data:
  redis_data:

networks:
  app-network:
    driver: bridge
